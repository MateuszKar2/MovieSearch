{"version":3,"file":"static/js/387.0942dd25.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    margin-top: 30px;\n    padding: 0 80px 40px;\n    font-size: 18px;\n`;\n\nexport const CastHeader = styled.h3`\n    font-size: 25px;\n    text-align: center;    \n`;\n\nexport const CastList = styled.ul`\n    margin-top: 30px;\n    display: flex;\n    align-items: center;\n    row-gap: 40px;\n    column-gap: 40px;\n    flex-wrap: wrap;\n    width: 100%;\n`;\n\nexport const CastListItem = styled.div`\n    width: calc((100% - (4 * 40px)) / 5);\n    height: 340px;\n\n    @media screen and (max-width: 768px) {\n    height: 180px;\n}\n`;\n\nexport const CastInfo = styled.div`\n    margin-top: 20px;\n    max-width: 220px;\n    font-size: 14px;\n\n    @media screen and (max-width: 768px) {\n    font-size: 10px;\n    }\n`;\n\nexport const CastName = styled.h3`\n    margin-bottom: 10px;\n`;\n\nexport const NoCastText = styled.p`\n    margin: 30px auto 0 auto;\n    text-align: center;\n    padding: 20px;\n    background-color: #f8f8f8;\n    border-radius: 5px;\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\n    max-width: 500px;\n`;\n\n","\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'services/api';\nimport { CastHeader, CastInfo, CastList, CastListItem, CastName, NoCastText, Wrapper } from './Cast.styled';\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [ cast, setCast ] = useState([]);\n\n\n    useEffect(() => {\n        const fetchCast = async () => {\n            try {\n                const { cast } = await fetchMovieCast(movieId);\n                setCast(cast);\n            } catch (error) {\n                console.log(error);\n            };\n        };\n\n        fetchCast();\n    }, [movieId]);\n\n    return (\n        <Wrapper>\n            <CastHeader>Cast</CastHeader>\n            {Cast.length ? (\n                <CastList>\n                    {cast.map(actor => (\n                        <CastListItem className=\"cast-card\" key={actor.id}>\n                            {actor.profile_path ? (\n                                <img src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`} alt={`${actor.name} profile`} />\n                            ) : (\n                                <img src={`https://via.placeholder.com/200x300?text=No+Image`} alt={`${actor.name} profile`}/>\n                            )};\n\n                            <CastInfo>\n                                <CastName>{actor.name}</CastName>\n                                <p>Character: {actor.character}</p>\n                            </CastInfo>\n                        </CastListItem>\n                ))}\n                </CastList>\n            ) : (\n                <NoCastText>\n                     We don't have any information about the cast yet.\n                </NoCastText>\n            )}\n        </Wrapper>\n    );\n};\n\nexport default Cast;","import axios from \"axios\";\n\nconst baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '3453ae595a5d53cbc877c6d05de8a002';\n\n\nexport const fetchTrendMovies = async () => {\n    const { data } = await axios.get(\n        `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n        );\n    return data;\n};\n\n\nexport const fetchMovieByName = async query => {\n    const { data } = await axios.get(\n        `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n        );\n    return data;\n  };\n\n\nexport const fetchMovieById = async movieId => {\n    const { data } = await axios.get(\n         `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n         );\n    return data;\n};\n\n\nexport const fetchMovieCast = async movieId => {\n    const { data } = await axios.get(\n        `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n        )\n    return data;\n};\n\n\nexport const fetchMovieReviews= async movieId => {\n    const { data } = await axios.get(\n        `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n        )\n    return data;\n};"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","CastHeader","_templateObject2","CastList","_templateObject3","CastListItem","_templateObject4","CastInfo","_templateObject5","CastName","_templateObject6","NoCastText","_templateObject7","Cast","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchMovieCast","_cast","_context","prev","next","fetchMovieCast","sent","t0","console","log","stop","apply","arguments","_jsxs","children","_jsx","length","map","actor","className","profile_path","src","concat","alt","name","character","id","baseURL","API_KEY","fetchTrendMovies","_yield$axios$get","data","axios","abrupt","fetchMovieByName","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","fetchMovieById","_ref3","_callee3","_yield$axios$get3","_context3","_x2","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}